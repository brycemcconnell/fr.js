let mouseDown=!1;const CONTROLS={mouse:!1,mouselook:!0,xmove:!0,zmove:!0,ymove:!0,jump:!0,mouselock:!0};function initControls(){window.addEventListener('keydown',function(a){CONTROLS.xmove&&('d'==a.key?(a.preventDefault(),velocity.x=.05):'a'==a.key&&(a.preventDefault(),velocity.x=-.05)),CONTROLS.zmove&&('s'==a.key?(a.preventDefault(),velocity.z=.05):'w'==a.key&&(a.preventDefault(),velocity.z=-.05)),CONTROLS.ymove&&('q'==a.key?(a.preventDefault(),velocity.y=.05):'z'==a.key&&(a.preventDefault(),velocity.y=-.05)),CONTROLS.jump&&' '==a.key&&!jumping&&(a.preventDefault(),jumping=!0,jumpVelocity=.1)}),window.addEventListener('keyup',function(a){('a'==a.key||'d'==a.key)&&(velocity.x=0),('w'==a.key||'s'==a.key)&&(velocity.z=0),('q'==a.key||'z'==a.key)&&(velocity.y=0)}),window.addEventListener('mousedown',function(){CONTROLS.mouse&&(mouseDown=!0)}),window.addEventListener('mouseup',function(){mouseDown=!1}),window.addEventListener('mousemove',function(a){CONTROLS.mouselook&&document.pointerLockElement&&(camera.rotation.x-=a.movementY/1e3,camera.rotation.y-=a.movementX/1e3)})}const cv={eularTo(a){let b=-a,c=0<b?b:2*Math.PI+b,d=THREE.Math.radToDeg(c),e=Math.abs(d%360);return e},compass:document.getElementById('compass'),compassUL:Array.from(compass.firstElementChild.children),getCardinal(a){let b=Math.round(a/45);b%=8;let c=b+1;c%=8;let d=b-1;d=(Math.abs(d)+8)%8;let e;switch(this.compassUL.forEach(a=>{a.className=''}),this.compassUL[b].classList.add('big'),this.compassUL[c].classList.add('medium'),this.compassUL[d].classList.add('medium'),b){case 0:e='North';break;case 7:e='North-west';break;case 6:e='West';break;case 5:e='South-west';break;case 4:e='South';break;case 3:e='South-east';break;case 2:e='East';break;case 1:e='North-east';break;default:e='broken';}return e}};function line(a,b,c,d){ctx.beginPath(),ctx.moveTo(a,b),ctx.lineTo(c,d),ctx.stroke(),ctx.closePath()}function clamp(a,b,c){return Math.min(Math.max(a,b),c)}function random(a,b){return null==b&&(b=0),Math.round(Math.random()*(a-b)+b)}function getMousePosition(a,b){const c=a.getBoundingClientRect();return{x:(b.clientX-c.left)*(a.width/c.width),y:(b.clientY-c.top)*(a.height/c.height)}}function compareKey(c,d){return d=null==d?1:d,function(e,a){let b=e[c]<a[c]?-1:e[c]>a[c]?1:0;return b*d}}function toRads(a){return a*(180/Math.PI)}function toDegs(a){return a*(Math.PI/180)}function normalize(a,b,c){return(a-c)/(b-c)}
